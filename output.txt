Line number: 2

Line number: 3

params => epsilon

params => , id params

params => , id params

params => id params

Line number: 4

constant => number

term => constant

arith_exp => term

Line number: 5

assign => arith_exp

assign_stmt => id = assign

basic_stmt => assign_stmt

finalStatements => basic_stmt

term => id

arith_exp => term

term => id

arith_exp => term

bool_exp => arith_exp < arith_exp

Line number: 6

term => id

arith_exp => term

list_index => id ( constant )

term => list_index

arith_exp => term

term => id

arith_exp => term

bool_term => arith_exp == arith_exp

bool_exp => bool_term

bool_factor => ( bool_exp )

bool_term => bool_factor

bool_exp => bool_term

Line number: 7

Line number: 8

term => id

arith_exp => term

return_stmt => return arith_exp

basic_stmt => return_stmt

finalStatements => basic_stmt

constant => number

term => constant

arith_exp => term

Line number: 9

return_stmt => return - arith_exp

basic_stmt => return_stmt

finalStatements => basic_stmt

end_suite => Dedent finalStatements

suite => \n end_suite

start_suite => \n Indent finalStatements

if_opt => T_ifif_stmt => if bool_exp : start_suite if_opt

cmpd_stmt => if_stmt

finalStatements => cmpd_stmt

Line number: 10

end_suite => epsilon

suite_while => \n end_suite_while

start_suite_while => \n Indent finalStatements suite_while

while_stmt => while bool_exp : start_suite

cmpd_stmt => while_stmt

finalStatements => cmpd_stmt

constant => number

term => constant

arith_exp => term

constant => number

term => constant

arith_exp => term

constant => number

term => constant

arith_exp => term

constant => number

term => constant

arith_exp => term

assign => ( list_elements )

assign_stmt => id = assign

basic_stmt => assign_stmt

finalStatements => basic_stmt

end_suite_func => finalStatements

suite_func => \n end_suite_func

suite_func => \n Nodent finalStatements suite_func

start_suite_func => \n Indent finalStatements suite_func

func_def => def id ( param ) : start_suite_func

finalStatements => func_def

Line number: 11

constant => number

term => constant

arith_exp => term

Line number: 12

assign => arith_exp

assign_stmt => id = assign

basic_stmt => assign_stmt

finalStatements => basic_stmt

term => len ( array )

arith_exp => term

Line number: 13

assign => arith_exp

assign_stmt => id = assign

basic_stmt => assign_stmt

finalStatements => basic_stmt

term => id

arith_exp => term

term => id

arith_exp => term

list_elements => id list_element

func_call => id ( list_elements )

assign => func_call

assign_stmt => id = assign

basic_stmt => assign_stmt

finalStatements => basic_stmt

Line number: 14

term => id

arith_exp => term

constant => number

term => constant

arith_exp => term

bool_term => arith_exp == arith_exp

bool_exp => bool_term

Line number: 15

constant => string

term => constant

arith_exp => term

print_values => arith_exp

print_stmt => print ( print_values )

basic_stmt => print_stmt

finalStatements => basic_stmt

Line number: 16

end_suite => epsilon

suite => \n end_suite

start_suite => \n Indent finalStatements

Line number: 17

constant => string

term => constant

arith_exp => term

term => id

arith_exp => term

print_values => arith_exp

print_values => arith_exp , print_values

print_stmt => print ( print_values )

basic_stmt => print_stmt

finalStatements => basic_stmt

Line number: 18

Line number: 19

end_suite => epsilon

suite => \n end_suite

start_suite => \n Indent finalStatements

else_stmt => else : start_suite

elif_stmts => else_stmt

if_opt => elif_stmtsif_stmt => if bool_exp : start_suite if_opt

cmpd_stmt => if_stmt

finalStatements => cmpd_stmt

StartParse => epsilon

StartParse => finalStatements \n StartParse

StartParse => finalStatements \n StartParse

StartParse => finalStatements \n StartParse

StartParse => finalStatements \n StartParse

StartParse => finalStatements \n StartParse

StartParse => \n StartParse

StartParse => \n StartParse

Start => StartParse EOF


------------------->valid python syntax<--------------------



<------------>         <------>              <------>        <------> 	       <------------>
Name                     Type                 value           Scope  	          Line number
------------            ------                ------ 	       ------ 	         ------------
i                    	Identifier          	0         	  1  		   4    5    6    7 
x                    	Identifier          	10        	  0  		  11   13 
x                    	Identifier          	null      	  1  		   3    6 
arr                  	Identifier          	null      	  0  		  10   13 
arr                  	Identifier          	null      	  1  		   3 
"Element is present at index" 	Constant            	null      	  0  		  17 
"Element is not present in array" 	Constant            	null      	  0  		  15 
0                    	Constant            	null      	  1  		   4 
1                    	Constant            	null      	  0  		  14 
1                    	Constant            	null      	  1  		   8 
2                    	Constant            	null      	  0  		  10 
3                    	Constant            	null      	  0  		  10 
4                    	Constant            	null      	  0  		  10 
N                    	Identifier          	N         	  0  		  12   13 
N                    	Identifier          	null      	  1  		   3    5 
search               	Func call           	null      	  0  		  13 
search               	Func_Name           	3         	  1  		   3 
result               	Identifier          	null      	  0  		  13   14   17 
10                   	Constant            	null      	  0  		  10   11 
40                   	Constant            	null      	  0  		  10 

func begin search
func param arr
func param N
func param x
i = 0
L0:
T0 = i < N
T1 = not T0
if T1 goto L1
T2 = arr[i] == x
if T2 goto L2
L2:
goto L0
L1:
func end search
func arg 2
func arg 3
func arg 4
func arg 10
func arg 40
x = 10
func arg arr
func arg N
func arg 10
T3 = call func search
T4 = T3 == -1
if T3 goto L4
L4:
goto L5
L5:


------------------->quads<--------------------
func begin		              (null)	              (null)	              search	
func param		              (null)	              (null)	                 arr	
func param		              (null)	              (null)	                   N	
func param		              (null)	              (null)	                   x	
         =		                   0	              (null)	                   i	
     Label		              (null)	              (null)	                  L0	
         <		                   N	                   i	                  T0	
       not		                  T0	              (null)	                  T1	
        if		                  T1	              (null)	                  L1	
       not		                   x	              (null)	                  T2	
        if		                  T2	              (null)	                  L2	
     Label		              (null)	              (null)	                  L2	
      goto		              (null)	              (null)	                  L0	
     Label		              (null)	              (null)	                  L3	
  func end		              (null)	              (null)	              search	
  func arg		              (null)	              (null)	                   2	
  func arg		              (null)	              (null)	                   3	
  func arg		              (null)	              (null)	                   4	
  func arg		              (null)	              (null)	                  10	
  func arg		              (null)	              (null)	                  40	
         =		                  10	              (null)	                   x	
         =		                   =	              (null)	                   x	
  func arg		              (null)	              (null)	                 arr	
  func arg		              (null)	              (null)	                   N	
  func arg		              (null)	              (null)	                  10	
 call func		              (null)	              (null)	              search	
       not		                   1	              (null)	                  T3	
        if		                  T3	              (null)	                  L5	
     Label		              (null)	              (null)	                  L5	
      goto		              (null)	              (null)	                  L7	
     Label		              (null)	              (null)	                  L0	
     Label		              (null)	              (null)	                  L7	

------------------->quads after optimization<--------------------
func begin		              (null)	              (null)	              search	
func param		              (null)	              (null)	                 arr	
func param		              (null)	              (null)	                   N	
func param		              (null)	              (null)	                   x	
         =		                   0	              (null)	                   i	
     Label		              (null)	              (null)	                  L0	
         <		                   N	                   0	                  T0	
       not		                  00	              (null)	                  T1	
        if		                  T1	              (null)	                  L1	
       not		                  10	              (null)	                  T2	
        if		                  T2	              (null)	                  L2	
     Label		              (null)	              (null)	                  L3	
  func end		              (null)	              (null)	              search	
  func arg		              (null)	              (null)	                   2	
  func arg		              (null)	              (null)	                   3	
  func arg		              (null)	              (null)	                   4	
  func arg		              (null)	              (null)	                  10	
  func arg		              (null)	              (null)	                  40	
         =		                  10	              (null)	                   x	
         =		                   =	              (null)	                   x	
  func arg		              (null)	              (null)	                 arr	
  func arg		              (null)	              (null)	                   N	
  func arg		              (null)	              (null)	                  10	
 call func		              (null)	              (null)	              search	
       not		                   1	              (null)	                  T3	
        if		                  T3	              (null)	                  L5	
     Label		              (null)	              (null)	                  L5	
      goto		              (null)	              (null)	                  L7	
     Label		              (null)	              (null)	                  L0	
     Label		              (null)	              (null)	                  L7	
